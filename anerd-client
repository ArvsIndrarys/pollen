#!/bin/sh
#
# anerd-client: Asynchronous Network Exchange Randomness Daemon Client
#
# Copyright 2012 Dustin Kirkland <kirkland@ubuntu.com>
#
# Authors:
#	- Dustin Kirkland
#	- Wesley Wiedenmeier
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#	http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

set -e

# Source configuration
PKG="anerd"
[ -r "/etc/${PKG}/pool" ] && . "/etc/${PKG}/pool"
[ -n "${1}" ] && POOL="${1}"
[ -n "${IPV6}" ] || IPV6=false
[ -n "${POOL}" ] || exit 0
[ -n "${PORT}" ] || PORT=26373
[ -n "${DEVICE}" ] || DEVICE="/dev/urandom"
[ -n "${BYTES}" ] || BYTES=64
[ -n "${HASH}" ] || HASH="sha512sum"

random_bytes() {
	# Read and print random bytes
	head -c "${BYTES}" "${DEVICE}"
}

salt() {
	# Append timestamp-based salt to input
	cat
	local i=0
	while [ ${i} -lt ${BYTES} ] ; do
		n=$(date +%N | sed "s/^0\+//")
		printf "%x" ${n}
		i=$((i+1))
	done
}

salt_hash_and_write() {
	# Salt input, whiten with a hash, and write to device
	salt | "${HASH}" > "${DEVICE}"
}

exchange_random_bytes() {
	local cmd
	case "${IPV6}" in
		true|TRUE|1)
			cmd="socat -t 0.01 - UDP6-DATAGRAM:[${1}]:${2}"
		;;
		*)
			cmd="socat -t 0.01 - UDP-DATAGRAM:${1}:${2}"
		;;
	esac
	(random_bytes | $cmd) | salt_hash_and_write
}

broadcast() {
	local cmd
	case "${IPV6}" in
		true|TRUE|1)
			cmd="socat -t 0.01 - UDP6-DATAGRAM:[ff02::1]:${PORT}"
		;;
		*)
			cmd="socat -t 0.01 - UDP-DATAGRAM:255.255.255.255:${PORT},broadcast"
		;;
	esac
	(random_bytes | $cmd) | salt_hash_and_write
}

# Loop over servers configured in the pool
for i in ${POOL}; do
	# Get the hostname/ip
	h=${i%%:*}
	# Get the port, or set to default
	p=${i##*:}
	[ "${h}" = "${p}" ] && p="${PORT}"
	[ -n "${h}" ] || continue
	exchange_random_bytes "${h}" "${p}"
done

# Now broadcast to the local network
broadcast 2>/dev/null || true
